{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Title/Title.module.css","Components/FeedbackOptions/FeedBackOptions.module.css","Components/Notification/Notification.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/Title/Title.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","className","styles","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","textObj","goodContent","neutralContent","badContent","totalContent","positivePercentageContent","statistics","stat__text","stat__value","defaultProps","Notification","message","notification","Title","section","title","title2","grandTitleTxt","titleTxt","text","App","state","e","setState","prev","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.041f6960.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1LghA\",\"stat__text\":\"Statistics_stat__text__VZAMZ\",\"stat__value\":\"Statistics_stat__value__3nRYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Title_section__1C0aO\",\"title\":\"Title_title__3pkYV\",\"title2\":\"Title_title2__1vI6c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedBackOptions_buttons__1CTKy\",\"button\":\"FeedBackOptions_button__Ac1n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1NGnN\"};","import PropTypes from \"prop-types\";\nimport styles from \"./FeedBackOptions.module.css\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map((option, index) => (\n        <button\n          key={index}\n          className={styles.button}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.array,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n  textObj: {\n    goodContent,\n    neutralContent,\n    badContent,\n    totalContent,\n    positivePercentageContent,\n  },\n}) {\n  const { statistics, stat__text, stat__value } = styles;\n  return (\n    <div className={statistics}>\n      <p className={stat__text}>\n        {goodContent}\n        <span className={stat__value}>{good}</span>\n      </p>\n      <p className={stat__text}>\n        {neutralContent}\n        <span className={stat__value}>{neutral}</span>\n      </p>\n      <p className={stat__text}>\n        {badContent}\n        <span className={stat__value}>{bad}</span>\n      </p>\n      <p className={stat__text}>\n        {totalContent}\n        <span className={stat__value}>{total}</span>\n      </p>\n      <p className={stat__text}>\n        {positivePercentageContent}\n        <span className={stat__value}>{positivePercentage}</span>\n      </p>\n    </div>\n  );\n}\n\nStatistics.defaultProps = {\n  textObj: {\n    goodContent: \"Good:\",\n    neutralContent: \"Neutral:\",\n    badContent: \"Bad:\",\n    totalContent: \"Total:\",\n    positivePercentageContent: \"Positive feedback:\",\n  },\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nexport default function Notification({ message }) {\n  return <div className={styles.notification}>{message}</div>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Notification from \"../Notification/Notification\";\nimport styles from \"./Title.module.css\";\n\nexport default function Title({\n  onLeaveFeedback,\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n  textObj,\n  options,\n}) {\n  const { section, title, title2 } = styles;\n  return (\n    <section className={section}>\n      <h1 className={title}>{textObj.grandTitleTxt}</h1>\n      <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      <h2 className={title2}>{textObj.titleTxt}</h2>\n      {good || neutral || bad ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n          textObj={textObj}\n        />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </section>\n  );\n}\n","import \"./index.css\";\nimport { Component } from \"react\";\nimport Title from \"./Components/Title\";\n\nconst text = {\n  grandTitleTxt: \"Please leave feedback\",\n  titleTxt: \"Statistics\",\n  goodContent: \"Good:\",\n  neutralContent: \"Neutral:\",\n  badContent: \"Bad:\",\n  totalContent: \"Total:\",\n  positivePercentageContent: \"Positive feedback:\",\n};\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (e) => {\n    this.setState((prev) => ({ [e.target.name]: prev[e.target.name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return good\n      ? Math.ceil((good / this.countTotalFeedback()) * 100) + \"%\"\n      : 0 + \"%\";\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Title\n        onLeaveFeedback={this.onLeaveFeedback}\n        total={this.countTotalFeedback()}\n        positivePercentage={this.countPositiveFeedbackPercentage()}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        textObj={text}\n        options={Object.keys(this.state)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}